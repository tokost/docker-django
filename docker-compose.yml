version: '3'

services:
  web:
    build: .
    command: sh -c "gunicorn mysite.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000" # Render environment variable for the port
    env_file:
      - .env  # Use .env file
    depends_on:
      - db
    environment:
      - ALLOWED_HOSTS=localhost,127.0.0.1, web
      - DEBUG=False
      - DJANGO_DB_HOST=db
      - PORT=8000  # This will be overridden by Render
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # uchova to data
    networks:
      - backend

  db-admin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # uchova data
    networks:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "8088:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static:/code/static  # pridane kvoli statickym suborom
    depends_on:
      - web
    networks:
      - backend

networks:
  backend:

volumes:
  postgres_data:
  pgadmin_data:
  static:

